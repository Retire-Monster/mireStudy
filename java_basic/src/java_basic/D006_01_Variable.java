package java_basic;

public class D006_01_Variable {
	int high = 0;
	int baseLine = 0;

//	지역변수와 전역변수
//	지역변수와 전역변수를 나누는 이유는 사용되는 범위에 따라 변수를 나누기 위함이다.
//	

//	전역변수는 아래 'sum' 같이 해당 클래스 전체에서 사용하는 변수이다.
//	전역변수의 특징은 해당 class 내부 전체에서 사용이 가능하다.
	int sum = 0;

//	지역변수는 아래 'i' 와 같이 클래스 필드에 새로 만들어진 블레이스 내부에 작성된 변수이다.
//	지역변수의 특징은 선언된 블레이스 내부에만 사용이 가능하다.
	for(
	int i = 0;i<1;i++)
	{
		sum += i;
	}

// 	'this'는 인스턴스를 대신하는 값이다.
//	인스턴스를 생성하였을 때 메소드 외부의 변수를 확인 할 수 없는 부분을
//	'class'의 필드에 선언된 변수값을 가져오는 방법이다
	public D006_01_Variable(int baseLine, int high) {
		this.high = high;
		this.baseLine = baseLine;
	}

//	오버로딩
//	System.out.print 문과 같이 어떤 타입의 변수가 들어와도 대응할 수 있도록 만든 것
//	오버 로딩은 하나의 'class' 안에서 메소드의 
//	'리턴타입' '메소드명' ('경우의 수')
	public D006_01_Variable(int baseLine, int high) {
	}
//	단 컴파일러는 자료형만 확인함으로 아래와 같이 선언 할 경우
//	중복오류를 반환한다.
	public D006_01_Variable(int baseLine, int high) {}
	public D006_01_Variable(int high, int baseLine) {}
	
//	타입을 달리 하면 중복 오류를 반환하지 않으며 순서도 맞춰야한다.
//	단 변수명이 다른경우 오버로딩으로 보지 않는다.
//	public '변수명'(String baseLine, char high) {}
	public D006_01_Variable(String baseLine, char high) {}
	public D006_01_Variable(char high, int baseLine) {}
	
//────초기화의 순서───────────────────────────────────────────────────────┐	
//	┌──────────[컴파일 단계]──────────┐	┌──────────런타임 단계]──────────┐│
//	│1.묵시적 초기화 → 2.명시적 초기화│→│ 3.블록 초기화 → 4.생성자 초기화││
//	│ [zero 초기화]     [기본값 지정]		[구문]			 [메소드]	 ││
//	└────────────[외부값 X]─────────────────────────────┘ └──[외부값 O]──┘│
//	단 런타임에는 반대방향으로 중요도가 정해진다						//│
																		//│
//	묵시적 초기화 ↓ (값은 0)											//│
	public int a;														//│
	public int b;														//│
																		//│
//	명시적 초기화 ↓														//│
	public int c = 1;													//│
	public int d = 2;													//│
																		//│
//	생성자 초기화 ↓														//│
	public D006_01_Variable() {											//│
		a = 1;															//│
		b = 2;															//│
	}																	//│
																		//│
//	블럭 초기화 ↓														//│
	{																	//│
		a = 0;															//│
		b = 0;															//│
	}																	//│
//────────────────────────────────────────────────────────────────────────┘


	
}
